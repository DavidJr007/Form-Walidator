{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","username","email","password","password2","accept","message","errors","messages","username_incorect","email_incorect","password_incorect","accept_incorect","handleChange","e","name","target","type","value","setState","checked","handleFormSubmit","preventDefault","validation","formValidation","correct","length","indexOf","this","setTimeout","className","onSubmit","noValidate","htmlFor","id","placeholder","onChange","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81a7d7a2.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\",\n    accept: false,\n    message: \"\",\n\n    errors: {\n      username: false,\n      email: false,\n      password: false,\n      password2: false,\n    },\n  };\n  messages = {\n    username_incorect: \"Name have to be longer than 8 and without space\",\n    email_incorect: \"Missing @ in email\",\n    password_incorect: \"Password have to have 8 marks\",\n    accept_incorect: \"You must accept it\",\n  };\n  handleChange = (e) => {\n    const name = e.target.name;\n    const type = e.target.type;\n    if (type === \"text\" || type === \"password\" || type === \"email\") {\n      const value = e.target.value;\n      this.setState({\n        [name]: value,\n      });\n    } else if (type === \"checkbox\") {\n      const checked = e.target.checked;\n      this.setState({\n        [name]: checked,\n      });\n    }\n  };\n  handleFormSubmit = (e) => {\n    e.preventDefault();\n\n    const validation = this.formValidation();\n\n    if (validation.correct) {\n      this.setState({\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        password2: \"\",\n        accept: false,\n        message: \"Everything correct. Thank you!\",\n        errors: {\n          username: false,\n          email: false,\n          password: false,\n          password2: false,\n        },\n      });\n    } else {\n      this.setState({\n        errors: {\n          username: !validation.username,\n          email: !validation.email,\n          password: !validation.password,\n          password2: !validation.password,\n          accept: !validation.accept,\n        },\n      });\n    }\n  };\n  formValidation = () => {\n    let username = false;\n    let email = false;\n    let accept = false;\n    let password = false;\n    let correct = false;\n\n    if (\n      this.state.username.length > 8 &&\n      this.state.username.indexOf(\" \") === -1\n    ) {\n      username = true;\n    }\n    if (this.state.email.indexOf(\"@\") !== -1) {\n      email = true;\n    }\n    if (this.state.password.length > 8) {\n      password = true;\n    }\n    if (this.state.accept) {\n      accept = true;\n    }\n    if (username && email && accept && password) {\n      correct = true;\n    }\n    return {\n      correct,\n      password,\n      username,\n      accept,\n      email,\n    };\n  };\n  componentDidUpdate() {\n    if (this.state.message !== \"\") {\n      setTimeout(\n        () =>\n          this.setState({\n            message: \"\",\n          }),\n        3000\n      );\n    }\n  }\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <form\n          className=\"register-form\"\n          onSubmit={this.handleFormSubmit}\n          noValidate\n        >\n          <h2 className=\"form-title\">Register</h2>\n          <div className=\"form-box\">\n            <label htmlFor=\"user\">Username:</label>\n            <input\n              type=\"text\"\n              id=\"user\"\n              placeholder=\"Enter a username\"\n              name=\"username\"\n              onChange={this.handleChange}\n            />\n            {this.state.errors.username && (\n              <p className=\"error-text\">{this.messages.username_incorect}</p>\n            )}\n          </div>\n          <div className=\"form-box\">\n            <label htmlFor=\"password\">Password:</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              placeholder=\"Password\"\n              name=\"password\"\n              onChange={this.handleChange}\n            />\n            {this.state.errors.password && (\n              <p className=\"error-text\">{this.messages.password_incorect}</p>\n            )}\n          </div>\n          <div className=\"form-box\">\n            <label htmlFor=\"password2\">Password:</label>\n            <input\n              type=\"password\"\n              id=\"password2\"\n              placeholder=\"Repeat the password\"\n              name=\"password2\"\n              onChange={this.handleChange}\n            />\n            {this.state.errors.password && (\n              <p className=\"error-text\">{this.messages.password_incorect}</p>\n            )}\n          </div>\n          <div className=\"form-box\">\n            <label htmlFor=\"email\">E-mail address:</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              placeholder=\"Enter e-mail address\"\n              name=\"email\"\n              onChange={this.handleChange}\n            />\n            {this.state.errors.email && (\n              <p className=\"error-text\">{this.messages.email_incorect}</p>\n            )}\n          </div>\n          <label htmlFor=\"accept\">\n            <input\n              type=\"checkbox\"\n              id=\"accept\"\n              name=\"accept\"\n              checked={this.state.accept}\n              onChange={this.handleChange}\n            />\n            I accepted the reugulations\n          </label>\n          {this.state.errors.accept && (\n            <p className=\"error-accept\">{this.messages.accept_incorect}</p>\n          )}\n\n          <button className=\"send\">Send</button>\n          {this.state.message && <h3>{this.state.message}</h3>}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}